# 🧩 IOCLA – Tema 2 (2025)

Assembly-based solutions to low-level computing problems, designed to deepen understanding of memory access, bitwise manipulation, control flow, and performance-oriented logic using x86 instructions.

📄 **Assignment repository:** https://gitlab.cs.pub.ro/iocla/tema-2-2025  
👨‍💻 **Author:** Theodor Vulpe – 315CB

---

## ✅ Task Overview

### 🔹 Task 1 – Filter Powers of Two

Store only those values from a source array into a destination array **if they are powers of two**.

- Uses the bitwise identity:  
x & (x - 1) == 0 ⟹ x is a power of 2

- Skips zero explicitly, since 0 & -1 == 0 but 0 is not a power of 2.

---

### 🔹 Task 2 – Event Validator & Sorter

#### 📅 Subtask 1: Validate Date

- Validates year and month using range checks.
- Uses `invalid_date` label for any invalid component.
- Looks up the maximum number of days based on the month.
- Checks that the day fits within that range.

#### 🔁 Subtask 2: Sort Events by Name

- Implements a **bubble sort**-style double loop.
- Uses `ecx` for array length.
- Each event struct is **36 bytes**, allowing safe `DWORD` (4-byte) swapping in 9 steps.
- Compares event names character-by-character to determine sort order.

---

### 🔹 Task 3 – Base64 Encoding (Manual Implementation)

- Computes number of 3-byte groups to encode.
- Constructs each 24-bit group by shifting and combining 3 input bytes.
- Splits 24-bit group into four 6-bit values via right shifts and masks.
- Encodes each 6-bit value as its corresponding Base64 character.
- Writes result into destination array and stores final size via pointer.

---

### 🔹 Task 4 – Sudoku Row & Column Checker

- Iterates digits 1–9 for each row/column.
- For each digit, checks if it appears **exactly once**.
- Uses a flag array to track duplicates.
- If digit is missing or duplicated → row/column is invalid.
- `check_row`: computes row pointer once.
- `check_column`: computes index dynamically via `(row * cols + col)`.
